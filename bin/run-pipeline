#!/usr/bin/env python3
import luigi
import tempfile
import sys
import os
from shutil import copyfile
from optparse import OptionParser
import json

from romidata import FSDB

def parse_path(path):
    path = path.strip('/')
    if not os.path.isdir(path):
        raise IOError("Scan path not found.")

    path = path.split('/')
    db_path = '/'.join(path[:-1])
    scan_id = path[-1])
    return db_path, scan_id

def main():
    usage = "usage: %prog [options] db/scan"
    parser = OptionParser(usage=usage)

    parser.add_option("-t", "--task",
                      dest="task",
                      default=None)

    parser.add_option("-c", "--config",
                      dest="config",
                      default=None)

    (options, args) = parser.parse_args()

    if '-n' in sys.argv:
        i = find('-n')

    if len(args) != 1:
        raise Exception(
            'Wrong number of arguments. Type %prog --help for more.')

    # Connect to database
    db_path, scan_id = parse_path(args[0])
    db = FSDB(db_path)

    # Read pipeline configuration
    scan_pipeline = os.path.join(db, scan, "pipeline.toml")
    if options.config is None: # By default, take pipeline.toml in the scan directory
        options.config = scan_pipeline
    if os.path.splitext(options.config)[-1] == ".toml":
        import toml
        config = toml.load(open(options.config))
    elif os.path.splitext(options.config)[-1] == ".json":
        config = json.load(open(options.config))
    else:
        raise Exception('Unknown pipeline config type')

    db_config = {}
    db_config['DatabaseConfig'] = {
        'db' : db,
        'scan_id' : scan
    }

    luigi_config = luigi.configuration.get_config()
    luigi_config.read_dict(config)
    luigi_config.read_dict(db_config)
    toml.dump(config, open(scan_pipeline, 'w'))


    luigi.build(tasks=[eval("%s()" % options.task)],
                local_scheduler=True)

if __name__ == "__main__":
    main()
