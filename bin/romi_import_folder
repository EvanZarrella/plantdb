#!/usr/bin/env python3
from romidata import FSDB
import argparse
import toml
import json
import os

parser = argparse.ArgumentParser(description='Import a folder as a fileset in a scan')

parser.add_argument('--metadata', metavar='metadata', type=str, default=None,
                    help='JSON or TOML file with metadata')

parser.add_argument('scan', metavar='scan', type=str,
                    help='Scan folder (/path/to/db/scan_id)')

parser.add_argument('folder', metavar='folder', type=str,
                    help='Folder to folder (folder name will be fileset id)')

args = parser.parse_args()
if args.metadata is not None:
    try:
        metadata = toml.load(args.metadata)
    except:
        try:
            metadata = json.load(args.metadata)
        except:
            raise IOError("Unable to read metadata file")
else:
    metadata = None

path = args.scan.rstrip('/')
path = path.split('/')

db_path = '/'.join(path[:-1])
scan_id = path[-1]

db = FSDB(db_path)
db.connect()

scan = db.get_scan(scan_id, create=True)

folder_path = args.folder.rstrip('/')
path = folder_path.split('/')
fileset_id = path[-1]

fileset = scan.create_fileset(fileset_id)
try:
    for f in os.listdir(folder_path):
        if os.path.isfile(os.path.join(folder_path, f)):
            fi = fileset.create_file(os.path.splitext(f)[0])
            fi.import_file(os.path.join(folder_path, f))
except:
    scan.delete_fileset(fileset_id)

if metadata is not None:
    fileset.set_metadata(metadata)
